'use strict';

var Enum = require('enum');

var ZMT = {};

module.exports = ZMT;

// SYS COMMANDS
ZMT[1] = new Enum({
    'resetReq': 0x00,
    'ping': 0x01,
    'version': 0x02,
    'setExtAddr': 0x03,
    'getExtAddr': 0x04,
    'ramRead': 0x05,
    'ramWrite': 0x06,
    'osalNvItemInit': 0x07,
    'osalNvRead': 0x08,
    'osalNvWrite': 0x09,
    'osalStartTimer': 0x0A,
    'osalStopTimer': 0x0B,
    'random': 0x0C,
    'adcRead': 0x0D,
    'gpio': 0x0E,
    'stackTune': 0x0F,
    'setTime': 0x10,
    'getTime': 0x11,
    'osalNvDelete': 0x12,
    'osalNvLength': 0x13,
    'setTxPower': 0x14,
    'jammerParameters': 0x15,
    'snifferParameters': 0x16,
    'zdiagsInitStats': 0x17,
    'zdiagsClearStats': 0x18,
    'zdiagsGetStats': 0x19,
    'zdiagsRestoreStatsNv': 0x1A,
    'zdiagsSaveStatsToNv': 0x1B,
    'osalNvReadExt': 0x1C,
    'osalNvWriteExt': 0x1D,
    'resetInd': 0x80,
    'osalTimerExpired': 0x81,
    'jammerInd': 0x82
});

// MAC COMMANDS
ZMT[2] = new Enum({
    'resetReq': 0x01,
    'init': 0x02,
    'startReq': 0x03,
    'syncReq': 0x04,
    'dataReq': 0x05,
    'associateReq': 0x06,
    'disassociateReq': 0x07,
    'getReq': 0x08,
    'setReq': 0x09,
    'scanReq': 0x0C,
    'pollReq': 0x0D,
    'purgeReq': 0x0E,
    'setRxGainReq': 0x0F,
    'securityGetReq': 0x30,
    'securitySetReq': 0x31,
    'associateRsp': 0x50,
    'orphanRsp': 0x51,
    'syncLossInd': 0x80,
    'associateInd': 0x81,
    'associateCnf': 0x82,
    'beaconNotifyInd': 0x83,
    'dataCnf': 0x84,
    'dataInd': 0x85,
    'disassociateInd': 0x86,
    'disassociateCnf': 0x87,
    'orphanInd': 0x8A,
    'pollCnf': 0x8B,
    'scanCnf': 0x8C,
    'commStatusInd': 0x8D,
    'startCnf': 0x8E,
    'rxEnableCnf': 0x8F,
    'purgeCnf': 0x90
});

// AF COMMANDS
ZMT[4] = new Enum({
    'register': 0x00,
    'dataRequest': 0x01,
    'dataRequestExt': 0x02,
    'dataRequestSrcRtg': 0x03,
    'delete': 0x04,
    'interPanCtl': 0x10,
    'dataStore': 0x11,
    'dataRetrieve': 0x12,
    'apsfConfigSet': 0x13,
    'apsfConfigGet': 0x14,
    'dataConfirm': 0x80,
    'incomingMsg': 0x81,
    'incomingMsgExt': 0x82,
    'reflectError': 0x83
});

// ZDO COMMANDS
ZMT[5] = new Enum({
    'nwkAddrReq': 0x00,
    'ieeeAddrReq': 0x01,
    'nodeDescReq': 0x02,
    'powerDescReq': 0x03,
    'simpleDescReq': 0x04,
    'activeEpReq': 0x05,
    'matchDescReq': 0x06,
    'complexDescReq': 0x07,
    'userDescReq': 0x08,
    'endDeviceAnnce': 0x0A,
    'userDescSet': 0x0B,
    'serverDiscReq': 0x0C,
    'endDeviceBindReq': 0x20,
    'bindReq': 0x21,
    'unbindReq': 0x22,
    'setLinkKey': 0x23,
    'removeLinkKey': 0x24,
    'getLinkKey': 0x25,
    'nwkDiscoveryReq': 0x26,
    'joinReq': 0x27,
    'mgmtNwkDiscReq': 0x30,
    'mgmtLqiReq': 0x31,
    'mgmtRtgReq': 0x32,
    'mgmtBindReq': 0x33,
    'mgmtLeaveReq': 0x34,
    'mgmtDirectJoinReq': 0x35,
    'mgmtPermitJoinRequest': 0x36,
    'mgmtNwkUpdateRequest': 0x37,
    'msgCbRegister': 0x3E,
    'msgCbRemove': 0x3F,
    'startupFromApp': 0x40,
    'autoFindDestination': 0x41,
    'nwkAddrRsp': 0x80,
    'ieeeAddrRsp': 0x81,
    'nodeDescRsp': 0x82,
    'powerDescRsp': 0x83,
    'simpleDescRsp': 0x84,
    'activeEpRsp': 0x85,
    'matchDescRsp': 0x86,
    'complexDescRsp': 0x87,
    'userDescRsp': 0x88,
    'userDescConf': 0x89,
    'serverDiscRsp': 0x8A,
    'endDeviceBindRsp': 0xA0,
    'bindRsp': 0xA1,
    'unbindRsp': 0xA2,
    'mgmtNwkDiscRsp': 0xB0,
    'mgmtLqiRsp': 0xB1,
    'mgmtRtgRsp': 0xB2,
    'mgmtBindRsp': 0xB3,
    'mgmtLeaveRsp': 0xB4,
    'mgmtDirectJoinRsp': 0xB5,
    'mgmtPermitJoinRsp': 0xB6,
    'stateChangeInd': 0xC0,
    'endDeviceAnnceInd': 0xC1,
    'matchDescRspSent': 0xC2,
    'statusErrorRsp': 0xC3,
    'srcRtgInd': 0xC4,
    'beacon_notify_ind': 0xC5,
    'joinCnf': 0xC6,
    'nwkDiscoveryCnf': 0xC7,
    'leaveInd': 0xC9,
    'msgCbIncoming': 0xFF,
    'endDeviceTimeoutReq': 0x0D,
    'sendData': 0x28,
    'nwkAddrOfInterestReq': 0x29,
    'secAddLinkKey': 0x42,
    'secEntryLookupExt': 0x43,
    'extRouteDisc': 0x45,
    'extRouteCheck': 0x46,
    'extRemoveGroup': 0x47,
    'extRemoveAllGroup': 0x48,
    'extFindAllGroupsEndpoint': 0x49,
    'extFindGroup': 0x4A,
    'extAddGroup': 0x4B,
    'extCountAllGroups': 0x4C,
    'extRxIdle': 0x4D,
    'extUpdateNwkKey': 0x4E,
    'extSwitchNwkKey': 0x4F,
    'extNwkInfo': 0x50,
    'extSecApsRemoveReq': 0x51,
    'forceConcentratorChange': 0x52,
    'extSetParams': 0x53,
    'tcDeviceInd': 0xCA,
    'permitJoinInd': 0xCB
});

// SAPI COMMANDS
ZMT[6] = new Enum({
    'systemReset': 0x09,
    'startRequest': 0x00,
    'bindDevice': 0x01,
    'allowBind': 0x02,
    'sendDataRequest': 0x03,
    'readConfiguration': 0x04,
    'writeConfiguration': 0x05,
    'getDeviceInfo': 0x06,
    'findDeviceRequest': 0x07,
    'permitJoiningRequest': 0x08,
    'startConfirm': 0x80,
    'bindConfirm': 0x81,
    'allowBindConfirm': 0x82,
    'sendDataConfirm': 0x83,
    'findDeviceConfirm': 0x85,
    'receiveDataIndication': 0x87
});

// UTIL COMMANDS
ZMT[7] = new Enum({
    'getDeviceInfo': 0x00,
    'getNvInfo': 0x01,
    'setPanid': 0x02,
    'setChannels': 0x03,
    'setSeclevel': 0x04,
    'setPrecfgkey': 0x05,
    'callbackSubCmd': 0x06,
    'keyEvent': 0x07,
    'timeAlive': 0x09,
    'ledControl': 0x0A,
    'testLoopback': 0x10,
    'dataReq': 0x11,
    'srcMatchEnable': 0x20,
    'srcMatchAddEntry': 0x21,
    'srcMatchDelEntry': 0x22,
    'srcMatchCheckSrcAddr': 0x23,
    'srcMatchAckAllPending': 0x24,
    'srcMatchCheckAllPending': 0x25,
    'addrmgrExtAddrLookup': 0x40,
    'addrmgrNwkAddrLookup': 0x41,
    'apsmeLinkKeyDataGet': 0x44,
    'apsmeLinkKeyNvIdGet': 0x45,
    'assocCount': 0x48,
    'assocFindDevice': 0x49,
    'assocGetWithAddress': 0x4A,
    'apsmeRequestKeyCmd': 0x4B,
    'zclKeyEstInitEst': 0x80,
    'zclKeyEstSign': 0x81,
    'syncReq': 0xE0,
    'zclKeyEstablishInd': 0xE1,
    'gpioSetDirection': 0x14,
    'gpioRead': 0x15,
    'gpioWrite': 0x16,
    'srngGenerate': 0x4C,
    'bindAddEntry': 0x4D
});

// DEBUG COMMANDS
ZMT[8] = new Enum({
    'setDebugThreshold': 0x00,
    'msg': 0x80
});

// APP COMMANDS
ZMT[9] = new Enum({
    'msg': 0x00,
    'userTest': 0x01,
    'zllTlInd': 0x81
});
